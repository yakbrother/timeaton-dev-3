---
import { getCollection } from "astro:content";
import BaseHead from "../../components/BaseHead.astro";
import Header from "../../components/Header.astro";
import Footer from "../../components/Footer.astro";
import Post from "../../components/Post.astro";
import ColorScript from "../../components/ColorScript.astro";

import { SITE_TITLE, SITE_DESCRIPTION } from "../../config";

export async function getStaticPaths() {
	let posts = await getCollection("posts");
	const tags = posts.reduce((allTags, post) => {
		const postTags = post.data.tags;
		if (postTags) {
			postTags.forEach((tag) => {
				if (!allTags[tag]) {
					allTags[tag] = [];
				}
				allTags[tag].push(post);
			});
		}
		return allTags;
	}, {});

	return Object.keys(tags).map((t) => {
		return {
			params: { tag: t },
			props: { tag: tags[t] },
		};
	});
}

const { tag } = Astro.props;
const { tag: currentTag } = Astro.params;

let sortedPosts = tag.sort(
	(a, b) => new Date(b.data.added).valueOf() - new Date(a.data.added).valueOf(),
);
---

<!DOCTYPE html>
<html lang="en-us">
	<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	<body>
		<Header />
		<main>
			<content>
				<h3>Posts tagged with "{currentTag}"</h3>
				<ul class="tags-list">
					{
						sortedPosts.map(
							({
								url,
								data: { description, slug, title, tags, added: date },
							}) => <Post {url} {description} {date} {slug} {title} {tags} />
						)
					}
				</ul>
			</content>
			<Footer />
		</main>
		<ColorScript />
	</body>
</html>